openapi: "3.0.2"

info:
  title: NeedForHeat API
  version: "3.0.0"

servers:
  - url: {{ .BaseURL }}

tags:
  - name: App
    description: Operations about apps
  - name: CloudFeed
    description: Operations about cloud feeds
  - name: Campaign
    description: Operations about campaigns
  - name: Account
    description: Operations about accounts
  - name: DeviceType
    description: Operations about device types
  - name: Device
    description: Operations about devices
  - name: Upload
    description: Operations about uploads
  - name: DataSource
    description: Operations about datasources, list and types
  - name: EnergyQuery
    description: Operations about energy queries
  - name: APIKey
    description: Operations about API keys

paths:
  /app:
    post:
      tags:
        - App
      summary: Create a new app
      operationId: createApp
      security:
        - AdminAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/App"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/App"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /cloud_feed_type:
    post:
      tags:
        - CloudFeed
      summary: Create a new cloud feed type
      operationId: createCloudFeed
      security:
        - AdminAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudFeedType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudFeedType'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /campaign:
    post:
      tags:
        - Campaign
      summary: Create a new campaign
      operationId: createCampaign
      security:
        - AdminAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Test campaign 1
                app:
                  type: object
                  properties:
                    name:
                      type: string
                      example: NeedForHeat
                info_url:
                  type: string
                  example: https://www.energietransitiewindesheim.nl/test-campaign-1
                data_source_list:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1        
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campaign"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /account:
    post:
      tags:
        - Account
      summary: Create a new account
      operationId: createAccount
      security:
        - AdminAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaign:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Test campaign 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCreated"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /account/activate:
    post:
      tags:
        - Account
      summary: Activate an account
      operationId: activateAccount
      security:
        - AccountActivationToken: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountActivated'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /account/{id}:
    get:
      tags:
        - Account
      summary: Get account information
      operationId: getAccountByID
      security:
        - AccountAuthorizationToken: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          description: Account ID
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountInfo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /account/{id}/cloud_feed:
    post:
      tags:
        - Account
      summary: Create a new cloud feed auth
      operationId: createCloudFeed
      security:
        - AccountAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudFeed'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
    get:
      tags:
        - Account
      summary: Get cloud feed information from the user
      operationId: getCloudFeed
      security:
        - AccountAuthorizationToken: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudFeedAuthStatus'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'

  /device_type:
    post:
      tags:
        - DeviceType
      summary: Create a new device type
      operationId: createDeviceType
      security:
        - AdminAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceType"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /device:
    post:
      tags:
        - Device
      summary: Create a new device
      operationId: createDevice
      security:
        - AccountAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: FCA2-AC4BC3
                activation_secret:
                  type: string
                  example: 1029380918
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceCreated"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /energy_query:
    post:
      tags:
        - EnergyQuery
      summary: Create a new EnergyQuery
      operationId: createEnergyQuery
      security:
        - AccountAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                energy_query_type:
                  type: object
                  ref: "#/components/schemas/EnergyQueryType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnergyQueryCreated"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /device/{name}:
    get:
      tags:
        - Device
      summary: Get device information
      operationId: getDeviceByName
      security:
        - AccountAuthorizationToken: []
      parameters:
        - name: name
          in: path
          schema:
            type: string
          description: Device name
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceInfo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /device/{name}/measurements:
    get:
      tags:
        - Device
      summary: Get device measurements
      operationId: getDeviceMeasurements
      security:
        - AccountAuthorizationToken: []
      parameters:
        - name: name
          in: path
          schema:
            type: string
          description: Device name
          required: true
        - name: start
          in: query
          schema:
            type: string
          description: Start date
          required: false
        - name: end
          in: query
          schema:
            type: string
          description: End date
          required: false
        - name: property
          in: query
          schema:
            type: integer
          description: Property ID
          required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceMeasurements"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /device/{name}/properties:
    get:
      tags:
        - Device
      summary: Get all used device properties
      operationId: getDeviceProperties
      security:
        - AccountAuthorizationToken: []
      parameters:
        - name: name
          in: path
          schema:
            type: string
          description: Device name
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceProperties"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /device/activate:
    post:
      tags:
        - Device
      summary: Activate a device
      operationId: activateDevice
      security:
        - DeviceActivationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: FCA2-AC4BC3
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceActivated"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /device/all:
    get:
      tags:
        - Device
      summary: Get all devices from current account
      operationId: getAllDeviceAccount
      security:
        - AccountAuthorizationToken: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllDevices"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /energy_query_type:
    post:
      tags:
        - EnergyQuery
      summary: Create a new Energy Query type
      operationId: createEnergyQueryType
      security:
        - AdminAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnergyQueryType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnergyQueryType"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /energy_query/{energy_query_type}:
    get:
      tags:
        - EnergyQuery
      summary: Get Energy Query information
      operationId: getEnergyQueryByName
      security:
        - AccountAuthorizationToken: []
      parameters:
        - name: energy_query_type
          in: path
          schema:
            type: string
          description: Energy Query Type
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnergyQueryInfo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /energy_query/{energy_query_type}/measurements:
    get:
      tags:
        - EnergyQuery
      summary: Get Energy Query measurements
      operationId: getEnergyQueryMeasurements
      security:
        - AccountAuthorizationToken: []
      parameters:
        - name: energy_query_type
          in: path
          schema:
            type: string
          description: Energy Query Type
          required: true
        - name: start
          in: query
          schema:
            type: string
          description: Start date
          required: false
        - name: end
          in: query
          schema:
            type: string
          description: End date
          required: false
        - name: property
          in: query
          schema:
            type: integer
          description: Property ID
          required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnergyQueryMeasurements"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /energy_query/{energy_query_type}/properties:
    get:
      tags:
        - EnergyQuery
      summary: Get all used Energy Query properties
      operationId: getEnergyQueryProperties
      security:
        - AccountAuthorizationToken: []
      parameters:
        - name: energy_query_type
          in: path
          schema:
            type: string
          description: Energy Query Type
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnergyQueryProperties"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /energy_query/all:
    get:
      tags:
        - EnergyQuery
      summary: Get all Energy Queries from current account
      operationId: getAllEnergyQueryAccount
      security:
        - AccountAuthorizationToken: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllEnergyQueries"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /upload:
    post:
      tags:
        - Upload
      summary: Upload new measurements
      operationId: createUpload
      security:
        - DeviceORAccountAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Upload"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Upload"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /data_source_list:
    post:
      tags:
        - DataSource
      summary: Create a new DataSourceList
      operationId: createDataSourceList
      security:
        - AdminAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSourceList"
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"       

  /data_source_type:
    post:
      tags:
        - DataSource
      summary: Create new DataSourceTpe
      operationId: createDataSourceTpe
      security:
        - AdminAuthorizationToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSourceType"  
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError" 

  /api_key/{api_name}:
    get:
      tags:
        - APIKey
      summary: Get an API key
      operationId: getAPIKey
      security:
        - AccountAuthorizationToken: []
      parameters:
        - name: api_name
          in: path
          schema:
            type: string
          description: API Name
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKey"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"    

components:
  schemas:
    App:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: NeedForHeat
        provisioning_url_template:
          type: string
          example: https://energietransitiewindesheim.page.link/?link=https%3A%2F%2Fwww.energietransitiewindesheim.nl%2F%3Ftest_token%3D<account_activation_token>&apn=nl.windesheim.energietransitie.warmtewachter&ibi=nl.windesheim.energietransitie.warmtewachter&isi=1563201993&efr=1
        oauth_redirect_url:
          type: string
          example: https://energietransitiewindesheim.page.link/callback

    Campaign:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: Test campaign 1
        app:
          $ref: "#/components/schemas/App"
        info_url:
          type: string
          example: https://www.energietransitiewindesheim.nl/test-campaign-1

    CloudFeedType:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        name:
          type: string
          example: Enelogic
        authorization_url:
          type: string
          example: https://enelogic.com/oauth/v2/auth
        token_url:
          type: string
          example: https://enelogic.com/oauth/v2/token
        client_id:
          type: string
          example: 10319_simpv2iqo80g008wkoo404c0os0sowg480kgww4sk4cwkc0o0
        client_secret:
          type: string
          example: 4lblxyw0bjms08o804o8kswso4o4wkwwcow44cc8c4oo0o008o
          writeOnly: true
        scope:
          type: string
          example: account
        redirect_url:
          type: string
          example: https://energietransitiewindesheim.page.link/callback

    CloudFeed:
      type: object
      properties:
        cloud_feed_id:
          type: integer
          example: 1
        auth_grant_token:
          type: string
          example: '1240912030asa76sa65d'

    CloudFeedAuthStatus:
      type: object
      properties:
        cloud_feed:
          $ref: '#/components/schemas/CloudFeed'
        connected:
          type: boolean
          example: false

    DeviceType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: Generic-Test

    EnergyQueryType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        energy_query_variety:
          type: string
          example: weather-interpolation-location
        formula:
          type: string
          example: x+y

    AccountCreated:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        campaign:
          $ref: "#/components/schemas/Campaign"
        activated_at:
          type: string
          format: date-time
          nullable: true
          example: null
        invitation_token:
          type: string
          readOnly: true
          example: eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUd29tZXNBUEl2MiIsInN1YiI6IjIiLCJleHAiOjE3MTUyNDg1NjYsIm5iZiI6MTY4MzcxMjU2NiwiaWF0IjoxNjgzNzEyNTY2LCJraW5kIjoiYWNjb3VudEFjdGl2YXRpb25Ub2tlbiJ9.InyaZw25soWCsZpl7te86gh1_u3vJja8q_LOY5vg-3w7DxZr_dYDsaHmSIMB2eOxIewo2lg_lF4QsiTWZH-GLA
        invitation_url:
          type: string
          readOnly: true
          example: https://energietransitiewindesheim.page.link/?link=https%3A%2F%2Fwww.energietransitiewindesheim.nl%2F%3Ftest_token%3DeyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUd29tZXNBUEl2MiIsInN1YiI6IjIiLCJleHAiOjE3MTUyNDg1NjYsIm5iZiI6MTY4MzcxMjU2NiwiaWF0IjoxNjgzNzEyNTY2LCJraW5kIjoiYWNjb3VudEFjdGl2YXRpb25Ub2tlbiJ9.InyaZw25soWCsZpl7te86gh1_u3vJja8q_LOY5vg-3w7DxZr_dYDsaHmSIMB2eOxIewo2lg_lF4QsiTWZH-GLA&apn=nl.windesheim.energietransitie.warmtewachter&ibi=nl.windesheim.energietransitie.warmtewachter&isi=1563201993&efr=1

    AccountActivated:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        campaign:
          $ref: "#/components/schemas/Campaign"
        activated_at:
          type: string
          format: date-time
          nullable: true
          example: 2023-05-10T09:13:12Z
        authorization_token:
          type: string
          readOnly: true
          example: eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUd29tZXNBUEl2MiIsInN1YiI6IjIiLCJleHAiOjE3MTUyNDg2OTksIm5iZiI6MTY4MzcxMjY5OSwiaWF0IjoxNjgzNzEyNjk5LCJraW5kIjoiYWNjb3VudFRva2VuIn0.RFiIgO4oG1k1gr9xpdKVX1toO_N_ZB0BrsrlXrj_K76pgljRKBbWcNEe4hbJoIKivaVuz9z6QGrWi4ZHPgGvXg

    AccountInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        campaign:
          $ref: "#/components/schemas/Campaign"
        activated_at:
          type: string
          format: date-time
          nullable: true
          example: 2023-05-10T09:13:12Z

    DeviceCreated:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: FCA2-AC4BC3
        device_type:
          $ref: "#/components/schemas/DeviceType"
        activated_at:
          type: string
          format: date-time
          nullable: true
          example: null
        latest_upload:
          type: string
          format: date-time
          nullable: true
          example: null

    EnergyQueryCreated:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        energy_query_type:
          $ref: "#/components/schemas/EnergyQueryType"
        activated_at:
          type: string
          format: date-time
          nullable: true
          example: null

    DeviceActivated:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: FCA2-AC4BC3
        device_type:
          $ref: "#/components/schemas/DeviceType"
        activated_at:
          type: string
          format: date-time
          nullable: true
          example: 2023-05-10T09:13:15Z
        authorization_token:
          type: string
          readOnly: true
          example: eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJUd29tZXNBUEl2MiIsInN1YiI6IjEiLCJleHAiOjE3MTUyNjE2NDQsIm5iZiI6MTY4MzcyNTY0NCwiaWF0IjoxNjgzNzI1NjQ0LCJraW5kIjoiZGV2aWNlVG9rZW4ifQ.fhVwSw6zZNY75O9D19JFu46c9g_yUpToIijQ_vYes_5wVehTuBZvl04zCK4qAcy3MT4GF8AUrodrOQmWwYZ5qg
        latest_upload:
          type: string
          format: date-time
          nullable: true
          example: null

    DeviceInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        name:
          type: string
          example: FCA2-AC4BC3
        device_type:
          $ref: "#/components/schemas/DeviceType"
        activated_at:
          type: string
          format: date-time
          nullable: true
          example: 2023-05-10T09:13:15Z
        latest_upload:
          type: string
          format: date-time
          nullable: true
          example: 2023-05-10T13:30:18Z

    EnergyQueryInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 1
        energy_query_type:
          $ref: "#/components/schemas/EnergyQueryType"
        activated_at:
          type: string
          format: date-time
          nullable: true
          example: 2023-05-10T09:13:15Z

    DeviceMeasurements:
      type: array
      items:
        properties:
          id:
            type: integer
          upload_id:
            type: integer
          property:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
                example: property_name__unit
          time:
            type: integer
            example: 1714229168
          value:
            type: string

    EnergyQueryMeasurements:
      type: array
      items:
        properties:
          id:
            type: integer
          upload_id:
            type: integer
          property:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
                example: property_name__unit
          time:
            type: string
            example: 2023-05-10T09:13:15Z
          value:
            type: string

    DeviceProperties:
      type: array
      items:
        properties:
          id:
            type: integer
          name:
            type: string
            example: property_name__unit

    EnergyQueryProperties:
      type: array
      items:
        properties:
          id:
            type: integer
          name:
            type: string
            example: property_name__unit

    GetAllDevices:
        type: array
        items:
          $ref: "#/components/schemas/DeviceInfo"

    GetAllEnergyQueries:
        type: array
        items:
          $ref: "#/components/schemas/EnergyQueryInfo"

    Upload:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 2
        instance_id:
          type: integer
          example: 1
        instance_type:
          type: string
          example: device
        server_time:
          type: integer
          readOnly: true
          example: 1714229168
        device_time:
          type: integer
          example: 1714229168
        size:
          type: integer
          readOnly: true
          example: 1
        measurements:
          type: array
          items:
            type: object
            properties:
              property:
                type: object
                properties:
                  name:
                    type: string
                    example: property_name__unit
              time:
                type: string
                example: 2023-05-10T13:20:00Z
              value:
                type: string
                example: 12
          writeOnly: true

    DataSourceList:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: "Test DataSourceList"
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              order:
                type: integer
                example: 1

    DataSourceType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        type_instance_id:
          type: integer
          example: 1
        category:
          type: string
          example: "device_type"
        order:
          type: integer
          example: 1
        precedes:
          type: array
          items:
           type: object
           properties:
              id:
                type: integer
                example: 2
        installation_url:
          type: string
          example: https://www.energietransitiewindesheim.nl/manuals/Generic-Test/
        info_url:
          type: string
          example: https://www.energietransitiewindesheim.nl/brains4buildings2022/privacy/  
        faq_url:
          type: string
          example: https://www.energietransitiewindesheim.nl/brains4buildings2022/privacy/        
        upload_schedule:
          type: string
          example: '* * * * *'
        measurement_schedule:
          type: string
          example: '* * * * *'    
        notification_threshold:
          type: string
          example: 'P2D'   

    APIKey:
      type: object
      properties:
        id:
          type: integer
          example: 1
        api_name:
          type: string
          example: 'google_maps'
        api_key:
          type: string
          example: 'ABCDEFHIJKLMNOPQRSTUVWXYZ'

    Error:
      type: object
      properties:
        message:
          type: string
          example: An error occured

  responses:
    400BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    401Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    403Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    404NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    500InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  securitySchemes:
    AdminAuthorizationToken:
      type: http
      scheme: bearer

    AccountAuthorizationToken:
      type: http
      scheme: bearer

    DeviceAuthorizationToken:
      type: http
      scheme: bearer

    DeviceORAccountAuthorizationToken:
      type: http
      scheme: bearer

    AccountActivationToken:
      type: http
      scheme: bearer

    DeviceActivationToken:
      type: http
      scheme: bearer
